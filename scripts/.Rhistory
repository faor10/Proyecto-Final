theme_bw() +
theme(axis.text.x = element_text(size = 6, angle = 45))
##Predicciones en test
x.test <- model.matrix( ~ pobl_tot + areaoficialkm2 + discapital + g_cap + finan_credito + vrf_peq_productor + lights_mean, testR)[, -1]
predict_test_ridge <- predict(modelo2_ridge_lambdamin, newx = x.test)
##Predicciones en test
x.test <- model.matrix( ~ pobl_tot + areaoficialkm2 + discapital  + vrf_peq_productor + lights_mean, testR)[, -1]
predict_test_ridge <- predict(modelo2_ridge_lambdamin, newx = x.test)
predict_test_ridge
# Create a dataframe of all x and predicted SL responses
predictions_finales <- data.frame(testR, predict_test_ridge)
predictions_finales<-rename(predictions_finales, ln_pib_prediccion =s0)
predictions_finales<-rename(predictions_finales, year =ano)
testR<-rename(testR, year =ano)
#Estadisticas descriptivas del precio predicho
summary(predictions_finales$ln_pib_prediccion)
ggplot(data = predictions_finales, mapping = aes(x = year, y = ln_pib_prediccion, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 30, by = 5)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 5)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 30))
View(predictions_finales)
View(predictions_finales)
predictions_finales %>%
group_by(depto, year) %>%
summarize(pib = sum(ln_pib_prediccion))
View(predictions_finales)
View(predictions_finales)
pib<-predictions_finales %>%
group_by(depto, year) %>%
summarize(pib = sum(ln_pib_prediccion))
View(pib)
View(pib)
View(predictions_finales)
View(predictions_finales)
View(predictions_finales)
View(predictions_finales)
View(trainR)
View(trainR)
submission<-data.frame(testR$municipio,testR$depto,testR$year,predictions_finales$ln_pib_prediccion)
View(submission)
View(submission)
submussion<-submissions%>% mutate(pib=exp(ln_pib))
submussion<-submission%>% mutate(pib=exp(ln_pib))
submussion<-submission%>% mutate(pib=exp(predicciones_finales.ln_pib))
submussion<-submission%>% mutate(pib=exp(predictions_finales.ln_pib))
submussion<-submission%>% mutate(pib=exp(predictions_finales.ln_pib_prediccion))
submussion<-submission%>% mutate(pib=exp(predictions_finales.ln_pib_prediccion))
View(submussion)
View(submussion)
View(submussion)
View(submussion)
pib<-submission %>%
group_by(depto, year) %>%
summarize(pib2 = sum(pib))
View(submission)
View(submission)
View(predictions_finales)
View(predictions_finales)
View(predictions_finales)
View(predictions_finales)
predictions_finales<-predictions_finales%>% mutate(pib=exp(ln_pib_prediccion))
View(predictions_finales)
View(predictions_finales)
ggplot(data = predictions_finales, mapping = aes(x = year, y = pib, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 30, by = 5)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 5)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 30))
summary(predictions_finales$pib)
final<-predictions_finales %>%
group_by(depto, year) %>%
summarize(pib_sum = sum(pib))
View(final)
View(final)
View(predictions_finales)
View(predictions_finales)
ggplot(data = predictions_finales, mapping = aes(x = year, y = pib, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 80, by = 20)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 5)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 80))
#Gráfica ln_pib por depto ya que son miles de municipios
library(ggplot2)
require("ggthemes")
library(ggplot2)
ggplot(data = predictions_finales, mapping = aes(x = year, y = pib, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 80, by = 20)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 5)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 80))
ggplot(predictions_finales,
aes(x=year, y= pib, color=depto)) +
geom_line(size=1) +
scale_x_date(date_breaks = '1 year',
labels = scales::date_format("%b")) +
scale_y_continuous(limits = c(150, 220),
breaks = seq(150, 220, 10),
labels = scales::dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "Jan - Aug 2018",
caption = "source: Yahoo Finance",
y = "Closing Price") +
theme_minimal() +
scale_color_brewer(palette = "Dark2")
ggplot(predictions_finales,
aes(x=year, y= pib, color=depto)) +
geom_line(size=1) +
scale_y_continuous(limits = c(150, 220),
breaks = seq(150, 220, 10),
labels = scales::dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "Jan - Aug 2018",
caption = "source: Yahoo Finance",
y = "Closing Price") +
theme_minimal() +
scale_color_brewer(palette = "Dark2")
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
require("caret")
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
require("pacman")
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
#Gráfica ln_pib por depto ya que son miles de municipios
library(ggplot2)
require("ggthemes")
require("pacman")
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
library(babynames) # provide the dataset: a dataframe called babynames
library(dplyr)
library(hrbrthemes)
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
library(viridis)
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
require(ggplot2)
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
require(dplyr)
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
theme_ipsum() +
ylab("Number of babies born")
predictions_finales %>%
ggplot( aes(x=year, y=pib, group=depto, color=depto)) +
geom_line() +
scale_color_viridis(discrete = TRUE) +
ggtitle("Popularity of American names in the previous 30 years") +
ylab("Number of babies born")
ggplot(predictions_finales, aes(x = year, y = pib / 1000, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
ggplot(predictions_finales, aes(x = year, y = pib / 10000000, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
ggplot(predictions_finales, aes(x = year, y = pib / 100000000000, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
ggplot(predictions_finales, aes(x = year, y = pib / 1000000000000, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
ggplot(predictions_finales, aes(x = year, y = pib, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
View(predictions_finales)
View(predictions_finales)
ggplot(final, aes(x = year, y = pib, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
View(final)
View(final)
ggplot(final, aes(x = year, y = pib_sum, colour = depto)) +
geom_line() + # Add a line to the plot
# The function labs allows to add and change labels like a title
labs(title = "GDP per Capita",
subtitle = "In thousand Dollars", # Add a subtitle
caption = "Source: Penn World Table 9.0.", # Add a caption
x = "Year") +  # Rename the title of the x-axis
theme_classic() + # Usa a predefined theme of the graph
# theme() changes further features of a graph.
theme(axis.title.y = element_blank()) # Here: delete the title of the y axis
View(final)
View(final)
View(final)
View(final)
View(final)
View(final)
ggplot(data = final, aes(x = year,
y = pib_sum,
color=depto)) +
geom_line() +
facet_wrap(~pib_sum, scales="free_y") +
theme(legend.position = "top")
saveRDS(final,"C:/Users/francisco.alejandro1/Documents/BD/Proyecto Final/Proyecto-Final/stores/trainR.rds")
ggplot(data = final, aes(x = year,
y = pib_sum,
color=depto)) +
geom_line() +
theme(legend.position = "top")
saveRDS(final,"C:/Users/francisco.alejandro1/Documents/BD/Proyecto Final/Proyecto-Final/stores/final.rds")
ggplot(data = final, mapping = aes(x = year, y = pib_sum, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 75, by = 25)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 5)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 75)) + # adjust y axis limits
facet_wrap(~ country) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
ggplot(data = final, mapping = aes(x = year, y = pib_sum, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 75, by = 25)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 5)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 75)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
ggplot(data = final, mapping = aes(x = year, y = pib_sum/1000000, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 75, by = 25)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 10)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 75)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
ggplot(data = final, mapping = aes(x = year, y = pib_sum/1000000, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 10, by = 5)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 10)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 10)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
ggplot(data = final, mapping = aes(x = year, y = pib_sum/10000000, color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 10, by = 5)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 10)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 10)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
ggplot(data = final, mapping = aes(x = year, y = (pib_sum/10000000), color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 10, by = 5)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 10)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 10)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
ggplot(data = final, mapping = aes(x = year, y = (pib_sum), color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 2, by = 1)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 10)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 10)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
View(final)
View(final)
ggplot(data = final, mapping = aes(x = year, y = (pib_sum), color = depto)) + # specify data, x-axis, y-axis and grouping variable
geom_line() + # a line per group
geom_point() + # points per group
theme_hc() +  # a ggtheme, similar to your example
labs(title = "Variation of vote shares of right wing populists, 2009 to 2019", # plot title
subtitle = "Add a subtitle of your choice", # plot subtitle
caption = "Add a caption of your choice") + # plot caption
theme(legend.position = "right", # move legend to the right hand side of the plot
axis.title.x = element_blank(), # remove x axis title
axis.title.y = element_blank(), # remove y axis title
legend.title = element_blank(), # remove legend title
plot.title = element_text(size = 20, color = "gray40"), # change size and color of plot title
plot.subtitle = element_text(color = "gray40"), # change color of subtitle
plot.caption = element_text(color = "gray40", hjust = 0)) + # change color of caption and left-align
scale_y_continuous(breaks = seq(0, 1000000, by = 500000)) + # specify min, max and break distance for y axis
scale_x_continuous(breaks = seq(2009, 2019, by = 10)) + # specify min, max and break distance for x axis
expand_limits(y = c(0, 1000000)) + # adjust y axis limits
facet_wrap(~ depto) + # facet wrap
theme(legend.position = "none") + # remove legend, since not needed anymore in facet_wrap
theme(panel.spacing.x = unit(4, "mm")) # avoid overlapping of x axis text
final[which.max(pib_sum)]
View(final)
View(final)
final[which.max(pib_sum)]
final[,depto[which.max(pib_sum)], by = year]
final[,depto[which.max(pib_sum)], by =year]
final[,depto[which.max(pib_sum)], by=year]
View(final)
View(final)
ggplot(final, aes(x = year, y = pib, colour =depto, group = depto)) +  geom_line() + geom_point()
ggplot(final, aes(x = year, y = pib, colour =depto)) +  geom_line() + geom_point()
ggplot(final,aes(x=year,y=pib_sum, color=depto)) + geom_line()
